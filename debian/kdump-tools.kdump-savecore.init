#! /bin/sh

### BEGIN INIT INFO
# Provides:          kdump-savecore
# Required-Start:    $time $local_fs $remote_fs $network
# Required-Stop:
# Default-Start:     S
# Default-Stop:
# Short-Description: kdump-savecore
# Description:       init script to save a crash dump and reboot
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME="kdump-savecore"
DESC="kdump-savecore"
export NAME

. /lib/lsb/init-functions
. /lib/init/vars.sh

VMCORE_FILE=/proc/vmcore
KDUMP_SCRIPT=/usr/sbin/kdump-config
KDUMP_DEFAULTS=/etc/default/kdump-tools     # use kdump-tools defaults
[ -r $KDUMP_DEFAULTS ] && . $KDUMP_DEFAULTS

[ ${USE_KDUMP:-0} -ne 0 ] || exit 0;

case "$1" in
  start)
	#
	# If we have a /proc/vmcore, then we just panic'd
	#
	if [ -e $VMCORE_FILE -a -s $VMCORE_FILE ]; then
		echo -n "Starting $DESC: RUNLEVEL='$RUNLEVEL'"
		$KDUMP_SCRIPT savecore
		if [ $? -ne 0 -a -n "$KDUMP_FAIL_CMD" ] ; then
			$KDUMP_FAIL_CMD ;
		else
			date -R ;
			reboot -f ;
		fi
	fi
	;;
  stop|status|restart|force-reload)
  	# other required options
        echo "$DESC:  $1 -- nothing to do"
	;;
  *)
	echo "Usage: $0 {start|stop|status|restart|force-reload}"
	exit 1
esac

exit 0
