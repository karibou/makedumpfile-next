#!/usr/bin/python3
# autopkgtest check: Verify rebooted testbed for readiness of kdump
# (C) 2016 Canonical Ltd.
# Author: Louis Bouchard <louis.bouchard@canonical.com>

import sys
import os
import unittest
import platform
import subprocess

class KdumpConfigTest(unittest.TestCase):
    '''Verify kdump configuration after reboot'''
    arch = platform.machine()
    def_file = '/boot/grub/grub.cfg'
    s390x_file = '/etc/zipl.conf'
    def_preset = '128M'
    ppc_preset = '2G-4G:320M,4G-32G:512M,32G-64G:1024M,64G-128G:2048M,128G-:4096M@32M'
    preset = def_preset
    bootfile = def_file

    def test_kdump_loaded(self):
        '''Verify that kdump is loaded'''

        out = subprocess.check_output(['kdump-config', 'show'],
                                      universal_newlines=True)
        self.assertIn('current state:    ready to kdump', out)

    def test_crashkernel_configured(self):
        '''Verify that crashkernel= is configured in the proper files'''

        if self.arch == 's390x':
            self.bootfile = s390x_file
        elif self.arch == 'ppc64el':
            self.preset = ppc_preset

        with open('%s' % self.bootfile, 'rb') as bootconf:
            bootlines = bootconf.readlines()
            self.assertIn('crashkernel=%s' % self.preset, str(bootlines))
        with open('/proc/cmdline', 'rb') as cmdline:
            bootcmd = cmdline.readlines()
            self.assertIn('crashkernel=%s' % self.preset, str(bootcmd))


    def test_check_symlink_present(self):
        '''Verify that symlinks are present'''

        self.assertTrue(os.path.exists('/var/lib/kdump/vmlinuz'),
                                        'vmlinuz is missing or broken')
        self.assertTrue(os.path.exists('/var/lib/kdump/initrd.img'),
                                        'initrd.img is missing or broken')

    def test_check_symlink_are_symlink(self):
        '''Verify that symlinks are really symlinks'''

        self.assertTrue(os.path.islink('/var/lib/kdump/vmlinuz'),
                                        'vmlinuz is not a symlink')
        self.assertTrue(os.path.islink('/var/lib/kdump/initrd.img'),
                                        'initrd.img is not a symlink')

    def test_symlink_to_current_kernel(self):
        '''Verify that symlinks points to the files for the current kernel'''

        kernel = platform.uname().release

        namelist = os.readlink('/var/lib/kdump/vmlinuz')
        self.assertEqual(namelist.lstrip('/boot/vmlinuz-'), kernel)

        namelist = os.readlink('/var/lib/kdump/initrd.img')
        self.assertEqual(namelist.lstrip('/var/lib/kdump/initrd.img-'), kernel)
if __name__ == '__main__':

    unittest.main(testRunner=unittest.TextTestRunner(stream=sys.stdout,
                                                     verbosity=2))
